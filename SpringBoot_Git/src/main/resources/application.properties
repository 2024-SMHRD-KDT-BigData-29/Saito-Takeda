spring.application.name=SpringBoot_Git
###################################################################################################
# application.properties : boot의 전체적인 환경설정을 위한 파일
# boot 특징
# 1. 내장 서버를 가지고 있음
# 2. boot는 프로젝트 생성시 사용할 라이브러리(디펜던씨)를 설정
# Spring Boot DevTools -> boot에서 기본적으로 제공하는 기능
# Thymeleaf -> html 에서는 java코드를 못씀 -> html 에서 자바코드와 비슷한 기능들을 쓸 수 있게 도와주는 라이브러리
# JPA -> mybatis를 쓰지않고 JPA를 사용
# 3. 원래 라이브러리에는 버전이 존재, 여기에서는 버전이 표기X, boot 버전에 맞춰서 알아서 라이브러리 버전을 맞춰줌
#
# 다른점
# 1. 레거시 프로젝트는 src- main- webapp- WEB-INF 이런식으로 사용했으나 여기에는 src-main 이외에 없음
# 2. root-context.xml, servlet-context.xml 파일이 없음 -> application.properties로 대체
# 3. static(css), templates(html) 폴더가 존재 -> html 사용을 지향
####################################################################################################
##
# port번호 설정
server.port=8807

# DB설정
# driver, url, username, password 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/sys
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3312/mp_24K_bigdata29_p2_2?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=mp_24K_bigdata29_p2_2
spring.datasource.password=smhrd2

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# 필수는 아님
# 콘솔창으로 만들어진 SQL 쿼리를 보이게 하기
spring.jpa.show-sql=true
# SQL 쿼리문을 가독성있게 출력(줄바꿈) 아래는 안되는것 같음
spring.jpa.properties.hibernate.format-sql=true

#
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.enabled=true
